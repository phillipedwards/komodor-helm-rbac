# this file will be used to create the service account and cluster role for the komodor agent
# these two resources will take the place of the default sa and cluster role created by the Komodor Helm Chart
# the service account is vanilla however the ClusterRole inherits all the "view" permissions fo the default ClusterRole
# and inherits patch/update/post/etc permissions for Deployment resources only.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: komodor-agent
  namespace: komodor
  labels:
    app.kubernetes.io/name: komodor-agent
    app.kubernetes.io/instance: komodor-agent
    
  annotations:
    {}
---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: komodor-agent
rules:
  - apiGroups:
    - ""
    resources:
    - events
    - pods
    - replicationcontrollers
    - services
    - namespaces
    - configmaps
    - nodes
    - persistentvolumes
    - persistentvolumeclaims
    - serviceaccounts
    - secrets
    - endpoints
    - limitranges
    - podtemplates
    - resourcequotas
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - rbac
    - rbac.authorization.k8s.io
    resources:
    - clusterroles
    - clusterrolebindings
    - rolebindings
    - roles
    verbs:
    - get
    - watch
    - list
  - apiGroups: # Required as minimum installation
    - apps
    resources:
    - deployments
    - daemonsets
    - replicasets # required to rollback deployments
    - statefulsets
    - controllerrevisions
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - batch
    resources:
    - jobs
    - cronjobs
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - extensions
    resources:
    - ingresses
    - networkpolicies
    - ingressclasses
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingressclasses
    - networkpolicies
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/log
    verbs:
    - "get"
    - "list"
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    - csidrivers
    - csinodes
    - csistoragecapacities
    - volumeattachments
    verbs:
    - get
    - watch
    - list
  # Required to validate if enabled CRDs are enabled on cluster
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - argoproj.io
    resources:
    - rollouts
    - rollouts/status
    - rollouts/finalizers
    - analysistemplates
    - clusteranalysistemplates
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - argoproj.io
    resources:
    - workflows
    - cronworkflows
    - workflowtemplates
    - clusterworkflowtemplates
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - metrics.k8s.io
    resources:
    - nodes
    - pods
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - mutatingwebhookconfigurations
    - validatingwebhookconfigurations
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    - selfsubjectaccessreviews
    - selfsubjectrulesreviews
    - subjectaccessreviews
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - flowcontrol.apiserver.k8s.io
    resources:
    - flowschemas
    - prioritylevelconfigurations
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - node.k8s.io
    resources:
    - runtimeclasses
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - podsecuritypolicies
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - scheduling.k8s.io
    resources:
    - priorityclasses
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - ""
    resources:
    - configmaps
    - namespaces
    - pods
    - nodes
    - nodes/stats
    - nodes/proxy
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - update
    - create
  - apiGroups:
    - extensions
    - "networking.k8s.io"
    resources:
    - ingresses
    verbs:
    - get
    - watch
    - list

  # apiserver metrics
  - nonResourceURLs:
    - "/metrics"
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - update
      - delete
      - list
      - get
      - watch

  # Allow to uninstall charts
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["delete", "list", "get"]
  - apiGroups: ["*"]
    resources: ["*"]
    verbs:     ["get", "watch", "list"]
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
      - secrets
    verbs:
      - "*"
  - apiGroups:
      - "rbac.authorization.k8s.io"
    resources:
      - clusterroles
      - clusterrolebindings
      - roles
      - rolebindings
    verbs:
      - "*"
  - apiGroups:
    - "apps"
    resources:
      - "deployments" # Required to restart Deployments
    verbs:
      - "patch"  
  - apiGroups: 
    - "apps"
    resources:
      - "deployments/scale" # Required to scale Deployments
    verbs:
      - "get"
      - "patch"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: komodor-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: komodor-agent
subjects:
  - kind: ServiceAccount
    name: komodor-agent
    namespace: komodor
---